{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the DSCTeX Documentation","text":"<p>This package contains LaTeX <code>.sty</code> and <code>.cls</code> files used in DSC courses at UCSD.</p>"},{"location":"#installation","title":"Installation","text":"<p>The easiest installation involves cloning the GitHub repository and copying the files under the <code>src/</code> directory to the same directory containing your LaTeX document.</p> <p>A more permanent installation involves saving these files somewhere and adding that directory to the <code>$TEXINPUTS</code> environment variable.</p>"},{"location":"#classes","title":"Classes","text":"<p>There are three files in this distribution:</p> <ul> <li><code>dscslides.cls</code>: a document class for the creation of lecture slides</li> <li><code>dscproblemset.cls</code>: for creating sets of problems (and solutions)</li> </ul>"},{"location":"#packages","title":"Packages","text":"<ul> <li><code>dscmath.sty</code>: symbols and helpers for writing math</li> </ul>"},{"location":"dscmath/","title":"dscmath.sty","text":"<p>A package with helper commands and functionality for typesetting mathematical content.</p>"},{"location":"dscmath/#commands","title":"Commands","text":""},{"location":"dscmath/#nsca","title":"<code>\\nsca</code>","text":"<p>A scalar in a set of scalars</p> <p>Example: <code>\\nsca{x}{2}</code></p>"},{"location":"dscmath/#nvec","title":"<code>\\nvec</code>","text":"<p>A vector in a set of vectors</p> <p>Example: <code>\\nvec{x}{2}</code></p>"},{"location":"dscmath/#bvec","title":"<code>\\bvec</code>","text":"<p>A basis vector in a set of basis vectors</p> <p>Example: <code>\\bvec{u}{2}</code></p>"},{"location":"dscmath/#be","title":"<code>\\be</code>","text":"<p>Convenience macro for the standard basis vectors</p> <p>Example: <code>\\be{2}</code></p>"},{"location":"dscmath/#bu","title":"<code>\\bu</code>","text":"<p>Convenience macro for alternative basis vectors</p> <p>Example: <code>\\bu{2}</code></p>"},{"location":"dscproblemset/","title":"dscproblemset.cls","text":"<p>A document class for creating problem sets (exams, homeworks, worksheets, etc.). Defines commands and environments for writing problems, solutions (which can be hidden or shown at the flip of a switch), and designated answer areas, such as multiple choices and response boxes.</p>"},{"location":"dscproblemset/#basic-usage","title":"Basic Usage","text":"<p>To use the class, write <code>\\documentclass{dscproblemset}</code> at the top of your document.</p> <p>Within the document, write each problem within a <code>prob</code> environment, themselves nested within a <code>probset</code> environment. Solutions to problems should be placed in <code>soln</code> environments.</p> <p>A minimal example:</p> <pre><code>\\documentclass{dscproblemset}\n\n\\begin{document}\n\n\\begin{probset}\n    \\begin{prob}\n        This is the first problem.\n\n        \\begin{soln}\n            This is its solution.\n        \\end{soln}\n    \\end{prob}\n\n    \\begin{prob}\n        This is the second problem.\n\n        \\begin{soln}\n            This is its solution.\n        \\end{soln}\n    \\end{prob}\n\\end{probset}\n\n\\end{document}\n</code></pre>"},{"location":"dscproblemset/#homeworks-vs-exams","title":"Homeworks vs. Exams","text":"<p>Homeworks and exams are both \"problem sets\", and this document class can be used to create either.</p>"},{"location":"dscproblemset/#homeworks","title":"Homeworks","text":"<p>Not much special needs to be done for homeworks. Perhaps the main difference between a homework and an exam is on the formatting of the title and instructions. For a homework, a minimal title is preferable; this can be created with <code>\\pstitle</code>:</p> <p>Signature: <code>\\pstitle{&lt;course name&gt;}{&lt;assignment name&gt;}[&lt;due date&gt;]</code></p>"},{"location":"dscproblemset/#exams","title":"Exams","text":"<p>The class provides functionality that is especially useful for exam writing, including the ability to have multiple versions, formatting a title page, and adding empty scratch pages.</p> <p>Exams are also more likely to use designated response areas; these are described in the Designated Response Areas section below.</p>"},{"location":"dscproblemset/#versioning","title":"Versioning","text":"<p>It can be useful to have different, but similar versions of an exam. For example, you might want students who sit next to one another to have different exam versions with slightly different problems (or problems in a different order).</p> <p>To help with exam versioning, this class provides a <code>\\onlyversion</code> command that can be used to conditionally execute code based on the exam version. For example:</p> <pre><code>\\onlyversion{A}{\n    % only displays if the exam version is \"A\"\n    Hello world!\n}\n</code></pre> <p>To set the exam's version, write <code>\\def\\version{&lt;version&gt;}</code> at the top of the document. For example, the following code produces \"This is Version A\":</p> <pre><code>\\def\\version{A}\n\n\\onlyversion{A}{\n    This is Version A\n}\n\n\\onlyversion{B}{\n    This is Version B\n}\n</code></pre> <p>On the other hand, changing the first line to <code>\\def\\version{B}</code> would produce \"This is Version B\".</p> <p>You can create as many exam versions as you like (or just one).</p> <p>An alternative way to specify the exam is to specify the value of <code>\\version</code> during compilation. This will depend on the LaTeX compiler you are using, but many support the <code>-usepretex</code> command line argument. This argument can be used to define a macro at compile time. For example, to compile the document with <code>\\version</code> set to \"A\", you might write:</p> <pre><code>pdflatex -usepretex=`\\def\\version{A}` myexam.tex\n</code></pre> <p>If this is done, the <code>\\def\\version{&lt;version&gt;}</code> line at the top of the document should be removed, as it will override the value set at compile time.</p>"},{"location":"dscproblemset/#formatting-a-front-page","title":"Formatting a Front Page","text":"<p>Use <code>\\examfrontpage</code> to generate an exam front page. The full signature is:</p> <pre><code>\\examfrontpage{&lt;course name&gt;}{&lt;exam name&gt;}{&lt;date&gt;}{&lt;instructions&gt;}\n</code></pre> <p>This will make areas for student name, the exam taker's signature, the signature of the test takers adjacent to the student, etc. If the exam is versioned, the version will appear, as will a place to write the exam version of the students seated on the left and right.</p> <p>If the <code>\\version</code> macro is not defined, the exam version will not appear on the front page.</p> <p>By default, there are boxes for the adjacent students to place their printed name and signature. You may change this section of the front page by redefining the <code>\\adjacentstudents</code> command. In particular, if you want to remove it altogether, you can write:</p> <pre><code>\\renewcommand{\\adjacentstudents}{}\n</code></pre> <p>This should be placed before the call to <code>\\examfrontpage</code>.</p>"},{"location":"dscproblemset/#name-areas","title":"Name Areas","text":"<p><code>\\nameoneverypage{}</code> can be used to display an area where students can write their name on every page.</p>"},{"location":"dscproblemset/#scratch-pages","title":"Scratch Pages","text":"<p><code>\\scratchpage{}</code> will generate an empty page (except for an instruction that says that the page is intentionally empty).</p> <p><code>\\scratchpagedetach{}</code> also generates an empty page for scratch work, but its message says that the page is OK to remove from the exam.</p>"},{"location":"dscproblemset/#problem-environments","title":"Problem Environments","text":""},{"location":"dscproblemset/#problems","title":"Problems","text":"<p>Groups of problems should be defined within a <code>probset</code> environment. Individual problems are defined within <code>prob</code> environments within the <code>probset</code>. For example:</p> <pre><code>\\begin{probset}\n    \\begin{prob}\n        This is the first problem.\n    \\end{prob}\n\n    \\begin{prob}\n        This is the second.\n    \\end{prob}\n\\end{probset}\n</code></pre> <p>Problems are numbered automatically. An optional description can be provided:</p> <pre><code>\\begin{prob}[(Extra credit!)]\n    ...\n\\end{prob}\n</code></pre> <p>Programming problems can be defined with the <code>progprob</code> environment. Programming problems are numbered on a different counter than normal problems.</p>"},{"location":"dscproblemset/#subproblems","title":"Subproblems","text":"<p>Multiple subproblems can be definined within a <code>subprobset</code> environment (itself placed within a <code>prob</code> environment. The individual subproblems should be placed within <code>subprob</code> environments. For example:</p> <pre><code>\\begin{prob}\n    This is a problem with several subparts.\n\n    \\begin{subprobset}\n        \\begin{subprob}\n            Part One.\n        \\end{subprob}\n\n        \\begin{subprob}\n            Part Two.\n        \\end{subprob}\n    \\end{subprobset}\n\n\\end{prob}\n</code></pre>"},{"location":"dscproblemset/#solutions","title":"Solutions","text":"<p>Solutions to a problem should be placed with a <code>soln</code> environment (itself placed within a <code>prob</code> or <code>subprob</code>. Its contents can be hidden or shown by writing either <code>\\showsolntrue</code> or <code>\\showsolnfalse</code> after <code>\\usepackage{dscproblemset}</code>.</p> <p>Example:</p> <pre><code>\\documentclass{article}\n\\usepackage{dscproblemset}\n\n% solutions will be hidden unless this is changed to \\showsolntrue\n\\showsolnfalse\n\n\\begin{document}\n    \\begin{probset}\n        \\begin{prob}\n            \\begin{soln}\n                This is the secret answer.\n            \\end{soln}\n        \\end{prob}\n    \\end{probset}\n\\end{document}\n</code></pre> <p>You can do things conditioned on whether or not solutions are shown using <code>\\ifshowsoln</code>. For example, to force a new page, but only in the solution document, write:</p> <pre><code>\\ifshownsoln\n    \\newpage\n\\fi\n</code></pre>"},{"location":"dscproblemset/#designated-response-areas","title":"Designated Response Areas","text":"<p>This package also provides tools for drawing designated response areas, such as those on a quiz or exam that will be scanned and graded.</p>"},{"location":"dscproblemset/#response-boxes","title":"Response Boxes","text":"<p>A blank response box can be drawn using the <code>responsebox</code> environment. The single argument to this environment is a size determining the height of the box. The contents of the environment are hidden when <code>\\ifshowsoln</code> is false, and are shown otherwise.</p> <p>Example: <pre><code>\\begin{prob}\n    What is the meaning of life?\n\n    \\begin{responsebox}{3in}\n        This is the solution.\n    \\end{responsebox}\n\\end{prob}\n</code></pre></p>"},{"location":"dscproblemset/#inline-response-boxes","title":"Inline Response Boxes","text":"<p>Inline response boxes for short answer questions can be drawn with <code>\\inlineresponsebox</code>. The signature is:</p> <p><code>\\inlineresponsebox[&lt;width&gt;][&lt;height&gt;]{&lt;solution&gt;}</code></p> <p>The default width is 1.5 inches, and the default height is 3.25 em.</p> <p>Example: <pre><code>\\begin{prob}\n    What is 3 + 5? \\inlineresponsebox[1in]{8}\n\\end{prob}\n</code></pre></p> <p>The default widths and heights can be overridden by changing the values of <code>\\inlineresponseboxwidth</code> and <code>\\inlineresponseboxheight</code>:</p> <pre><code>\\setlength{\\inlineresponseboxwidth}{1in}\n\\setlength{\\inlineresponseboxheight}{1in}\n</code></pre>"},{"location":"dscproblemset/#multiple-choices","title":"Multiple Choices","text":"<p>Multiple choice bubbles can be drawn with the <code>choices</code> environment:</p> <pre><code>\\begin{prob}\n    What is the capital of California?\n\n    \\begin{choices}\n        \\choice Los Angeles\n        \\choice San Francisco\n        \\correctchoice Sacramento\n        \\choice San Diego\n    \\end{choices}\n\\end{prob}\n</code></pre> <p>The correct bubble is shaded when <code>\\ifshownsoln</code> is true, and is unmarked otherwise.</p> <p>The shape of the choice bubble can be altered with an optional argument to the <code>choices</code> environment. The shape can be any valid TiKZ node shape:</p> <pre><code>Choose all that apply:\n\n\\begin{choices}[rectangle]\n    \\choice alpha\n    \\correctchoice beta\n    \\choice gamma\n    \\choice delta\n\\end{choices}\n</code></pre> <p>If desired, individual bubbles can be drawn outside of a <code>choices</code> environment using the <code>\\bubble{&lt;text&gt;}</code> and <code>\\correctbubble{&lt;text&gt;}</code> commands.</p>"},{"location":"dscproblemset/#truefalse","title":"True/False","text":"<p>True/False response areas can be drawn with <code>\\Tf</code> (if True is the correct response) and <code>\\tF</code> (if False is the correct response). Like with <code>choices</code>, the correct choice is shaded if solutions are being shown.</p>"},{"location":"dscproblemset/#other-commands","title":"Other Commands","text":""},{"location":"dscproblemset/#inputproblem","title":"<code>\\inputproblem</code>","text":"<p>A helper function for including a problem located in a subdirectory. Assumes that the problem is containing in a file names <code>problem.tex</code> within a directory named after the problem, itself within a directory called <code>problems</code>.</p> <p>Signature: <code>\\inputproblem[&lt;description&gt;]{&lt;problem name&gt;}</code></p> <p>Example: to include the problem defined in <code>problems/time-complexity/problem.tex</code>, write <code>\\inputproblem{time-complexity}</code>.</p>"},{"location":"dscproblemset/#compile-time-solution-hiding","title":"Compile-time Solution Hiding","text":"<p>As described above, showing or hiding the solutions can be done by setting <code>\\showsolntrue</code> or <code>\\showsolnfalse</code> after <code>\\usepackage{dscproblemset}</code>. However, there are some cases in which we'd like to show or hide solutions at compile time (e.g., in a <code>Makefile</code> that builds both the version with solutions and that without).</p> <p>To facilitate this, this package looks for a macro named <code>\\hidesoln</code>. If this name exists, <code>\\showsolnfalse</code> is set. Otherwise, <code>\\showsolntrue</code> is set by default.</p> <p>This mechanism facilitates compile-time automation because macros can be defined at the command line with most LaTeX compilers using the <code>-usepretex</code> argument. For example:</p> <pre><code>pdflatex -usepretex=`\\def\\hidesoln{1}`\n</code></pre>"},{"location":"dscproblemset/#configuration","title":"Configuration","text":"<p>The spacing between problems and subproblems can be changed by redefining the commands <code>\\probsep</code> and <code>\\subprobsep</code>. Their default definitions are:</p> <pre><code>% separation between problems\n\\newcommand{\\probsep}{0.5cm}\n\n% separation between subproblems\n\\newcommand{\\subprobsep}{.25cm}\n</code></pre> <p>By default, programming problems are labeled, e.g., \"Problem 1.\", and programming problems are labeled \"Programming Problem 1.\". The text that appears before the number can be controlled by redefining <code>\\probtext</code> and <code>\\progprobtext</code>.</p>"},{"location":"dscproblemset/#example","title":"Example","text":"<pre><code>\\documentclass{dscproblemset}\n\n\\usepackage[margin=1in]{geometry}\n\n% change to \\showsolntrue to show solutions\n\\showsolnfalse\n\n% determine the exam's version\n\\def\\version{Z}\n\n\\begin{document}\n\n\\examfrontpage{\n    DSC 40B\n}{\n    Midterm 01\n}{\n    December 21, 2022\n}{\n    Instructions: do not cheat.\n}\n\n\\nameoneverypage{}\n\n\\begin{probset}\n\n    \\begin{prob}\n        This is the first problem in the homework.\n\n        \\begin{soln}\n            This is the solution.\n        \\end{soln}\n\n    \\end{prob}\n\n    \\begin{prob}\n        This is a problem with several subparts.\n\n        \\begin{subprobset}\n            \\begin{subprob}\n                Part One.\n            \\end{subprob}\n\n            \\begin{subprob}\n                Part Two.\n            \\end{subprob}\n        \\end{subprobset}\n\n    \\end{prob}\n\n    \\begin{prob}[(Optional descriptions can be provided)]\n        Designated response areas can be drawn.\n\n        \\begin{responsebox}{2in}\n            And solutions can be placed inside.\n        \\end{responsebox}\n    \\end{prob}\n\n    \\begin{prob}\n        They can be inline response areas, too:\n\n        First name: \\inlineresponsebox[2in]{testing}\n\n        Last name: \\inlineresponsebox[2in]{this}\n    \\end{prob}\n\n    \\newpage\n\n    \\begin{prob}\n        Multiple choice questions are supported.\n\n        \\begin{choices}\n            \\choice alpha\n            \\correctchoice beta\n            \\choice gamma\n            \\choice delta\n        \\end{choices}\n\n        The choice bubble's shape can be changed to any valid\n        TiKZ node shape, such as ``rectangle'':\n\n        \\begin{choices}[rectangle]\n            \\choice alpha\n            \\correctchoice beta\n            \\choice gamma\n            \\choice delta\n        \\end{choices}\n    \\end{prob}\n\n    \\begin{prob}\n        As are True/False questions.\n\n        \\Tf{}\n\n    \\end{prob}\n\n    % redefine the text that appears before the problem number\n    \\renewcommand{\\progprobtext}{Coding Problem}\n\n    \\begin{progprob}\n        This is a programming problem; it is numbered on a different counter.\n\n        \\bubble{test}\n    \\end{progprob}\n\n\\end{probset}\n\n\\scratchpage{}\n\n\\end{document}\n</code></pre>"},{"location":"dscslides/","title":"dscslides.cls","text":"<p>A document class for lecture slides.</p>"},{"location":"dscslides/#basic-use","title":"Basic Use","text":"<p>Use this class by writing <code>\\documentclass{dscslides}</code> at the top of your document.</p> <p>The class provides a <code>\\parttitle</code> command for generating title slides at the beginning of each of the presentation's parts. To use this command, two things must be configured: the course title, and the lecture number, done with <code>\\coursetitle{}</code> and <code>\\lecturenumber</code>, respectively.</p> <p>Beamer's \"handout\" mode is useful for generating a version of a presentation that is suitable for printing (namely, animations are \"squashed\" into one slide). To facilitate a way of specifying whether or not handout mode should be used at the command-line, this class checks to see if a <code>\\handout</code> macro has been defined; this can be done with most latex compilers using the CLI option <code>-usepretex=\\def\\handout{1}</code>. If this macro is defined, handout mode is used and frame numbers are displayed; if it is not defined, handout mode is not used.</p> <p>The class defines a new conditional, <code>\\ifhandout</code>, which is true if and only if we are in handout mode.</p>"},{"location":"dscslides/#example","title":"Example","text":"<pre><code>\\documentclass{dscslides}\n\n\\begin{document}\n\n% set what is displayed for the course title on part title slides\n\\coursetitle{\n    \\Huge DSC 40B%\n    \\vspace{.5em}\n}\n\n% set the lecture number\n\\lecturenumber{1}\n\n% displays the course title, lecture number, part number, and part title\n\\parttitle{\n    Introduction\n}\n\n\\begin{frame}\n    \\centertitle{dscslides.sty}\n\n    \\begin{itemize}\n        \\item This is an example of slides created with \\textit{dscslides.sty}\n    \\end{itemize}\n\\end{frame}\n\n\\begin{frame}\n    \\begin{exercise}\n        This is a \\term{exercise}, and practice makes \\good{perfect}.\n    \\end{exercise}\n\\end{frame}\n\n\\end{document}\n</code></pre>"},{"location":"dscslides/#commands","title":"Commands","text":""},{"location":"dscslides/#coursetitle","title":"<code>\\coursetitle{}</code>","text":"<p>Sets the content that should be displayed for the course's title on title slides.</p> <p>Example: <code>\\coursetitle{\\Large DSC 40B}</code></p>"},{"location":"dscslides/#lecturenumber","title":"<code>\\lecturenumber{}</code>","text":"<p>Sets the lecture number. This will be shown in title slides.</p>"},{"location":"dscslides/#parttitle","title":"<code>\\parttitle{}</code>","text":"<p>Generate a title slide for a part of the lecture. Numbering is done automatically with the <code>lecturepartnum</code> counter.</p> <p>Example: <code>\\parttitle{Introduction}</code></p>"},{"location":"dscslides/#centertitle","title":"<code>\\centertitle{}</code>","text":"<p>Format a frame's title (centered and bolded).</p> <p>Example: <code>\\centertitle{Welcome to DSC 40B}</code></p>"},{"location":"dscslides/#writinglines","title":"<code>\\writinglines{}</code>","text":"<p>Display <code>n</code> blank lines for writing.</p> <p>Example: <code>\\writinglines{3}</code></p>"},{"location":"dscslides/#term","title":"<code>\\term{}</code>","text":"<p>Format a word that is being defined.</p> <p>Example: <code>An \\term{undirected graph} is...</code></p>"},{"location":"dscslides/#good","title":"<code>\\good{}</code>","text":"<p>Format something that is good.</p> <p>Example: <code>This algorithm is \\good{fast}...</code></p>"},{"location":"dscslides/#bad","title":"<code>\\bad{}</code>","text":"<p>Format something that is bad.</p> <p>Example: <code>This algorithm is \\bad{slow}...</code></p>"},{"location":"dscslides/#highlight","title":"<code>\\highlight{}</code>","text":"<p>Format text that should be emphasized</p> <p>Example: <code>This algorithm is \\highlight{very} slow</code></p>"},{"location":"dscslides/#environments","title":"Environments","text":"<p>The following environments are defined. They appear as a color box with the environment contents within.</p> <ul> <li><code>exercise</code></li> <li><code>funfact</code></li> <li><code>mainidea</code></li> <li><code>warning</code></li> <li><code>defn</code></li> <li><code>thm</code></li> </ul> <p>Example:</p> <pre><code>\\begin{exercise}\n    What is 3 + 5?\n\\end{exercise}\n</code></pre>"},{"location":"dscslides/#colors","title":"Colors","text":"<p>The following colors are defined. They can be used by writing, e.g., <code>\\color{pastelblue}{text to color}</code>.</p> <ul> <li><code>pastelred</code></li> <li><code>pastelblue</code></li> <li><code>pastelpurple</code></li> <li><code>pastelyellow</code></li> <li><code>pastelgreen</code></li> <li><code>darkblue</code></li> <li><code>darkgreen</code></li> <li><code>faded</code></li> </ul>"}]}